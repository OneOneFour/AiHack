xlab('Current contraception method') +
ylab('Number of children alive') +
scale_fill_brewer(palette = 'Paired')
ggplot(wfs, aes(x=curr_contracept, y=child_alive, fill=curr_contracept)) +
geom_boxplot() +
xlab('Current contraception method') +
ylab('Number of children alive') +
scale_fill_brewer(palette = 'Paired')
ggplot(wfs, aes(x=curr_contracept, y=child_alive, fill=curr_contracept)) +
geom_boxplot() +
xlab('Current contraception method') +
ylab('Number of children alive') +
scale_fill_brewer(palette = 'Paired') +
theme_classic()
#Trying to compare more as normalising to 1
#ISsue as many of the groups have very few people
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic()
#Then just need to work out how to be able to combine these
ggplot(ethnicity_merge) + geom_bar(aes(x=ethnicity, y=total)) + geom_bar(aes(x = ethnicity, y=number_eff)) + scale_fill_brewer(palette = "Paired")
ethnicitybar <- ggplot(ethnicity_merge, aes(x = ethnicity, y=number_eff)) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Paired") + scale_colour_brewer(palette = "Paired")
ethnicitybar
tab <- table(wfs$ethnicity, wfs$curr_contracept)
tab
tab <- table(wfs$ethnicity, wfs$curr_contracept)
tab
tabdf <- as.data.frame(tab)
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = 'dodge') +
ggtitle('Normal bar chart') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired")
#Looking at it stacked instead
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = 'dodge') +
ggtitle('Stacked bar chart') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired")
#Trying to compare more as normalising to 1
#ISsue as many of the groups have very few people
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic()
#summary(wfs$region)
#At the moment this has all the women in, need to rerun it once we have decided how to reset the data
region <- wfs %>%
group_by(region) %>%
summarize(n = n(), mean_age = mean(age))
efficient <- subset(wfs, curr_contracept == "Using efficient")
region
efficient_region <- efficient %>%
group_by(region) %>%
summarize(n = n(), mean_age = mean(age))
region_merge <- (merge(x = region, y=  efficient_region,  by.x = c("region"), by.y = c("region"))) #y = effici contracep use
region_merge <- region_merge %>%
mutate(dif_age_eff = mean_age.x - mean_age.y) %>%
mutate(num_non_eff = n.x - n.y) %>%
mutate(percent_eff = (n.y / n.x)*100)
setnames(region_merge, old=c("n.x","mean_age.x", "n.y", "mean_age.y"), new=c("total", "mean_age_all", "number_eff", "mean_age_eff")) #Rename the columns
region_merge
tab <- as.data.frame(table(wfs$region, wfs$curr_contracept))
tab
ggplot(tab, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
geom_text(aes(label = Freq), position = 'fill') +
guides(fill=guide_legend(title="Curent contraception method"))
#summary(wfs$region)
#At the moment this has all the women in, need to rerun it once we have decided how to reset the data
region <- wfs %>%
group_by(region) %>%
summarize(n = n(), mean_age = mean(age))
efficient <- subset(wfs, curr_contracept == "Using efficient")
region
efficient_region <- efficient %>%
group_by(region) %>%
summarize(n = n(), mean_age = mean(age))
region_merge <- (merge(x = region, y=  efficient_region,  by.x = c("region"), by.y = c("region"))) #y = effici contracep use
region_merge <- region_merge %>%
mutate(dif_age_eff = mean_age.x - mean_age.y) %>%
mutate(num_non_eff = n.x - n.y) %>%
mutate(percent_eff = (n.y / n.x)*100)
setnames(region_merge, old=c("n.x","mean_age.x", "n.y", "mean_age.y"), new=c("total", "mean_age_all", "number_eff", "mean_age_eff")) #Rename the columns
region_merge
tab <- as.data.frame(table(wfs$region, wfs$curr_contracept))
ggplot(tab, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
geom_text(aes(label = Freq), position = 'fill') +
guides(fill=guide_legend(title="Curent contraception method"))
ggplot(tab, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "dodge") +
ggtitle('REGION: Normal bar chart') + xlab('Region') +
scale_fill_brewer(palette = "Paired") +
geom_text(aes(label = Freq), position = 'fill') +
guides(fill=guide_legend(title="Current contraception method"))
ggplot(tab, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('REGION: Stacked bar chart normalised to 1') + xlab('Region') +
scale_fill_brewer(palette = "Paired") +
geom_text(aes(label = Freq), position = 'fill') +
guides(fill=guide_legend(title="Current contraception method"))
#foir all the data, need to go back and rerun once we have decided on our exlusion critera
ethnicity <- wfs %>%
group_by(ethnicity) %>%
summarize(n = n(), mean_age = mean(age))
ethnicity #Very few of about 5 ethnicities, how do we do this?
efficienteth <- subset(wfs, curr_contracept == "Using efficient")
efficient_ethnicity <- efficienteth %>%
group_by(ethnicity) %>%
summarize(n = n(), mean_age = mean(age))
ethnicity_merge <- (merge(ethnicity, efficient_ethnicity,  by.x = c("ethnicity"), by.y = c("ethnicity"))) #y is efficient contraceptive use
ethnicity_merge <- ethnicity_merge %>%
mutate(dif_age_eff = mean_age.x - mean_age.y) %>%
mutate(num_non_eff = n.x - n.y) %>%
mutate(proportion_eff = (n.y / n.x)*100)
setnames(ethnicity_merge, old=c("n.x","mean_age.x", "n.y", "mean_age.y"), new=c("total", "mean_age_all", "number_eff", "mean_age_eff")) #Rename the columns
ethnicity_merge
tab <- table(wfs$ethnicity, wfs$curr_contracept)
tab
tabdf <- as.data.frame(tab)
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = 'dodge') +
ggtitle('Normal bar chart') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired")
#Looking at it stacked instead
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = 'dodge') +
ggtitle('Stacked bar chart') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired")
#Trying to compare more as normalising to 1
#ISsue as many of the groups have very few people
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic()
#foir all the data, need to go back and rerun once we have decided on our exlusion critera
ethnicity <- wfs %>%
group_by(ethnicity) %>%
summarize(n = n(), mean_age = mean(age))
ethnicity #Very few of about 5 ethnicities, how do we do this?
efficienteth <- subset(wfs, curr_contracept == "Using efficient")
efficient_ethnicity <- efficienteth %>%
group_by(ethnicity) %>%
summarize(n = n(), mean_age = mean(age))
ethnicity_merge <- (merge(ethnicity, efficient_ethnicity,  by.x = c("ethnicity"), by.y = c("ethnicity"))) #y is efficient contraceptive use
ethnicity_merge <- ethnicity_merge %>%
mutate(dif_age_eff = mean_age.x - mean_age.y) %>%
mutate(num_non_eff = n.x - n.y) %>%
mutate(proportion_eff = (n.y / n.x)*100)
setnames(ethnicity_merge, old=c("n.x","mean_age.x", "n.y", "mean_age.y"), new=c("total", "mean_age_all", "number_eff", "mean_age_eff")) #Rename the columns
ethnicity_merge
tab <- table(wfs$ethnicity, wfs$curr_contracept)
tab
tabdf <- as.data.frame(tab)
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = 'dodge') +
ggtitle('ETHNICITY: Normal bar chart') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired")
#Looking at it stacked instead
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = 'dodge') +
ggtitle('ETHNICITY: Stacked bar chart') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired")
#Trying to compare more as normalising to 1
#ISsue as many of the groups have very few people
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('ETHNICITY: Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic()
ggplot(wfs, aes(x=curr_contracept, y=child_alive, fill=curr_contracept)) +
geom_boxplot() +
xlab('Current contraception method') +
ylab('Number of children alive') +
scale_fill_brewer(palette = 'Paired') +
theme_classic()
ggplot(wfs, aes(x=curr_contracept, y=child_alive, fill=curr_contracept)) +
geom_boxplot() +
xlab('Current contraception method') +
ylab('Number of children alive') +
scale_fill_brewer(palette = 'Paired') +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method"))
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('ETHNICITY: Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method")) +
scale_y_continuous(labels = percent_format())
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2, label = paste0(percentage,"%"))) +
geom_bar(stat="identity", position = "fill") +
ggtitle('ETHNICITY: Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method"))
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2, label = (percentage,"%"))) +
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2, label = c(percentage,"%"))) +
geom_bar(stat="identity", position = "fill") +
ggtitle('ETHNICITY: Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method"))
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('ETHNICITY: Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method")) +
geom_text(data=tabdf, aes(x = Var1, y = Freq, label = paste0(percentage,"%"))
ggplot(tabdf, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('ETHNICITY: Stacked bar chart normalised to 1') + xlab('Ethnicity') +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method")) +
geom_text(data=tabdf, aes(x = Var1, y = Freq, label = paste0(percentage,"%")))
#summary(wfs$region)
#At the moment this has all the women in, need to rerun it once we have decided how to reset the data
region <- wfs %>%
group_by(region) %>%
summarize(n = n(), mean_age = mean(age))
efficient <- subset(wfs, curr_contracept == "Using efficient")
region
efficient_region <- efficient %>%
group_by(region) %>%
summarize(n = n(), mean_age = mean(age))
region_merge <- (merge(x = region, y=  efficient_region,  by.x = c("region"), by.y = c("region"))) #y = effici contracep use
region_merge <- region_merge %>%
mutate(dif_age_eff = mean_age.x - mean_age.y) %>%
mutate(num_non_eff = n.x - n.y) %>%
mutate(percent_eff = (n.y / n.x)*100)
setnames(region_merge, old=c("n.x","mean_age.x", "n.y", "mean_age.y"), new=c("total", "mean_age_all", "number_eff", "mean_age_eff")) #Rename the columns
region_merge
tab <- as.data.frame(table(wfs$region, wfs$curr_contracept))
ggplot(tab, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "dodge") +
ggtitle('REGION: Normal bar chart') + xlab('Region') +
scale_fill_brewer(palette = "Paired") +
geom_text(aes(label = Freq), position = 'fill') +
guides(fill=guide_legend(title="Current contraception method"))
ggplot(tab, aes(x=Var1, y = Freq, fill = Var2)) +
geom_bar(stat="identity", position = "fill") +
ggtitle('REGION: Stacked bar chart normalised to 1') + xlab('Region') +
scale_fill_brewer(palette = "Paired") +
geom_text(aes(label = Freq), position = 'fill') +
guides(fill=guide_legend(title="Current contraception method"))
ggplot(wfs, aes(x=curr_contracept, y=child_alive, fill=curr_contracept)) +
geom_boxplot() +
xlab('Current contraception method') +
ylab('Number of children alive') +
scale_fill_brewer(palette = 'Paired') +
theme_classic() +
guides(fill=guide_legend(title="Current contraception method"))
print(stackloss)
# Slide 6
print(stackloss)
Y=stackloss$stack.loss
X=stackloss$Air.Flow
#Aim: Simple linear regression
lm1 <- lm(Y ~ X, stackloss)
summary(lm1)
#Intercept = -44.1
#Beta coeff = 1.02
#Build the vectors X A and E:
residuals()
#Intercept = -44.1
#Beta coeff = 1.02
#Build the vectors X A and E:
residuals(lm1)
lm1$residuals
lm1$coefficients
?rep
B = c(rep(lm1$coefficients[2]), 21)
A = as.vector(rep(lm1$coefficients[1], 21))
B = c(rep(lm1$coefficients[2]), 21)
Z = A + B*X +E
?cbind
cbind(Z, Y)
Z = A + B*X +E
E = lm1$residuals
lm1$coefficients #NBut need to get it in the same lengths
A = as.vector(rep(lm1$coefficients[1], 21))
B = c(rep(lm1$coefficients[2]), 21)
Z = A + B*X +E
X=stackloss$Air.Flow
Z = A + B*X +E
A = as.vector(rep(lm1$coefficients[1], times =  21))
B = c(rep(lm1$coefficients[2]), times = 21)
Z = A + B*X +E
#More effienct:
alpha=coef(model)[1]
A=rep(alpha, length(X))
#More effienct:
alpha=coef(lm1)[1]
A=rep(alpha, length(X))
beta=coef(lm1)[2]
E=residuals(lm1)
Z=A+X*beta+E
summary(wfs)
wfs <- readRDS("~/Documents/4_Masters/1_Intro_stats_and_data_analytics/Fiji_presentation/fiji-wfs-1974-analytical(1).rds")
summary(wfs)
### Slide 15
Y=stackloss$stack.loss
alpha_list=seq(5,50)
k=1
alpha=alpha_list[k]
S=sum((Y-alpha)^2)
S_values=NULL
for (k in 1:length(alpha_list)){
alpha=alpha_list[k]
S=sum((Y-alpha)^2)
S_values=c(S_values, S) #Concatenating to the vector of S values
}
hat_alpha_grid_search_ols=alpha_list[which.min(S_values)]
plot(alpha_list, S_values, pch=19, col="navy", cex.lab=1.5,
xlab=expression(alpha), ylab="S")
abline(v=hat_alpha_grid_search_ols, col="red", lty=2)
legend("top", bty="n", cex=1.5, text.col="red",
legend=substitute(hat(alpha)~"="~a, list(a=hat_alpha_grid_search_ols)))
# Slide 22
alpha=15
# Imy: Want to compute the likelihood
# Imy: See list of practice on slide 22
dnorm(Y, mean = alpha)
# Imy: want to see how likely it is we have these y values, given alpha
loglik = sum(dnorm(Y, mean = alpha, log = TRUE))
prod(dnorm(Y, mean = alpha))
sum(dnorm(Y, mean = alpha, log=TRUE)) #Becomes a sum because the product of a log in the sum
#Try a grid search to find the best value
#Same as before, but using the loglikelihood instead of the s metric
#Imy's attmpt here:
Y=stackloss$stack.loss
alpha_list=seq(5,50)
k=15
alpha=alpha_list[k]
for (k in 1:length(alpha_list)){
alpha=alpha_list[k]
S=sum((Y-alpha)^2)
S_values=c(S_values, S) #Concatenating to the vector of S values
}
L_values = NULL
for (i in 1:length(alpha_list)){
alpha1=alpha_list[i]
L=sum(dnorm(Y, mean = alpha1, log=TRUE))
L_values=c(L_values, L) #Concatenating to the vector of S values
}
L_values
hat_alpha_grid_search_ols=alpha_list[which.min(L_values)]
plot(alpha_list, L_values, pch=19, col="navy", cex.lab=1.5,
xlab=expression(alpha), ylab="S")
abline(v=hat_alpha_grid_search_ols, col="red", lty=2)
legend("top", bty="n", cex=1.5, text.col="red",
legend=substitute(hat(alpha)~"="~a, list(a=hat_alpha_grid_search_ols)))
##### OLS - Simple linear regression - Grid search #####
#OLS: Ordinary least squares
#Want to be as small as possible to be close as possible to the real values
# Slide 24
Y=stackloss$stack.loss
X=stackloss$Air.Flow
alpha_list=seq(-100,50,length.out=100)
beta_list=seq(0,2,length.out=100)
#Need 2 for loops as have alpha and beta values
S_mat=matrix(NA, nrow=length(alpha_list), ncol = length(beta_list))
for (i in 1:length(alpha_list)){
for (j in length(beta_list)){
alpha = alpha_list[i]
beta = beta_list[j]
S=sum((Y-alpha-beta*X)^2)
S_mat[i,j]=S #Storing it in the matrix according it to the i and j value used to create the value
}
}
S_mat
#For one value of aloha nad one value of beta
i=1
j=1
alpha=alpha_list[i]
beta=beta_list[j]
S=sum((Y-alpha-beta*X)^2) #This is the value we want to minimise
#Need 2 for loops as have alpha and beta values
S_mat=matrix(NA, nrow=length(alpha_list), ncol = length(beta_list))
for (i in 1:length(alpha_list)){
for (j in length(beta_list)){
alpha = alpha_list[i]
beta = beta_list[j]
S=sum((Y-alpha-beta*X)^2)
S_mat[i,j]=S #Storing it in the matrix according it to the i and j value used to create the value
}
}
#Using two for loops is a way of iterating through all the possibe alpha and beta values
#Represent thematrix in a heatmap
pheatmap(log(S_mat), cluster_rows=FALSE, cluster_cols =FALSE)
?pheatmap
intall.packages("pheatmap")
install.packages("pheatmap")
#Using two for loops is a way of iterating through all the possibe alpha and beta values
#Represent thematrix in a heatmap
pheatmap(log(S_mat), cluster_rows=FALSE, cluster_cols =FALSE)
# Slide 30
Y=stackloss$stack.loss
predictors=as.matrix(stackloss[,1:3])
lm(y ~ x)
lm(Y ~ x)
lm(Y ~ predictors)
model=lm(Y ~ predictors)
summary(model)
X=cbind(rep(1, nrow(predictors), predictors))
X=cbind(rep(1, nrow(predictors)), predictors)
hat_beta=solve(t(X)%*%X)%*%t(X)%*%Y
hat_beta
setwd("/Users/imyyounge/Documents/4_Masters/ai_hack/AiHack")
age <- read.csv("gp_prac_age_distribution.csv")
library(ggplot2)
library(dplyr)
age2 <- subset(age, AGEINT < 45, select=c(ONS_CODE, AGE_GROUP_5, NUMBER_OF_PATIENTS))
age[age$AGEINT =='ALL'] <- NULL
age2 <- subset(age, AGEINT < 45, select=c(ONS_CODE, AGE_GROUP_5, NUMBER_OF_PATIENTS))
age2 <- age %>% select(as.character(40_44, 45_49, 50_54, 55_59, 60_64, 65_69))
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot()+
labs(xlab="Log(Number of Patients)", ylab="Age group (bands of 5)") +
theme_dark()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot()+
labs(xlab="Log(Number of Patients)", ylab="Age group (bands of 5)") +
theme_bw()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot()+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_bw()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="##0072B2")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_dark()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="royal_blue")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_dark()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="blue")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_dark()
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.margin = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="blue")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="0033CC")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="##0033CC")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="blue")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="Blues")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="dodgerblue3")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="grey")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
ggplot(age, aes(x=AGE_GROUP_5, y=log(NUMBER_OF_PATIENTS))) + geom_boxplot(colour="darkgrey")+
labs(x="Log(Number of Patients)", y="Age group (bands of 5)") +
theme_black()
